"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const fs = require("fs");
const chalk = require("chalk");
module.exports = (options) => {
    console.log(`Create discord app with name ${options.name} at ${process.cwd()}`);
    const targetDir = path.resolve(process.cwd(), options.name);
    if (fs.existsSync(targetDir)) {
        console.error(chalk.red(`Error : Directory ${options.name} already exist at ${process.cwd()}`));
        process.exit(1);
    }
    fs.mkdirSync(targetDir);
    if (options.language === 'js') {
        const packageJSON = {
            name: options.name,
            version: "0.0.1",
            description: "A bot discord generated with djsbot-cli",
            main: `main.js`,
            scripts: {
                start: `node main.js`
            },
            keywords: ['dsjbot-cli'],
            author: '',
            license: 'MIT',
            dependencies: {
                'discord.js': "^12.2.0"
            },
            devDependencies: {
                dotenv: "^8.2.0"
            }
        };
        fs.writeFileSync(path.resolve(targetDir, 'package.json'), `${JSON.stringify(packageJSON)}\n`);
        const license = [
            'MIT License',
            '',
            'Copyright (c) [year] [fullname]',
            '',
            'Permission is hereby granted, free of charge, to any person obtaining a copy',
            'of this software and associated documentation files (the "Software"), to deal',
            'in the Software without restriction, including without limitation the rights',
            'to use, copy, modify, merge, publish, distribute, sublicense, and/or sell',
            'copies of the Software, and to permit persons to whom the Software is',
            'furnished to do so, subject to the following conditions:',
            '',
            'The above copyright notice and this permission notice shall be included in all',
            'copies or substantial portions of the Software.',
            '',
            'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR',
            'IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,',
            'FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE',
            'AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER',
            'LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,',
            'OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE',
            'SOFTWARE.'
        ].join('\n');
        fs.writeFileSync(path.resolve(targetDir, 'LICENSE'), license);
        const dotenv = {
            COMMAND_START: options.prefix !== undefined ? options.prefix : '!',
            BOT_TOKEN: '<YOUR_TOKEN>'
        };
        fs.writeFileSync(path.resolve(targetDir, '.env'), `${Object.entries(dotenv).map(([key, value]) => `${key}="${value}"`).join('\n')}\n`);
        fs.copyFileSync(path.resolve(path.resolve(__dirname, `../templates/basic/js`), `main.js`), path.resolve(targetDir, 'main.js'));
    }
    else if (options.language === 'ts') {
    }
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdG9yQm90L2Jhc2ljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkJBQTZCO0FBQzdCLHlCQUF5QjtBQUN6QiwrQkFBK0I7QUFFL0IsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLE9BQU8sRUFBRSxFQUFFO0lBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0NBQWdDLE9BQU8sQ0FBQyxJQUFJLE9BQU8sT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNoRixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUQsSUFBRyxFQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxFQUFFO1FBQ3pCLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsT0FBTyxDQUFDLElBQUkscUJBQXFCLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNoRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ25CO0lBQ0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN4QixJQUFHLE9BQU8sQ0FBQyxRQUFRLEtBQUssSUFBSSxFQUFFO1FBQzFCLE1BQU0sV0FBVyxHQUFHO1lBQ2hCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTtZQUNsQixPQUFPLEVBQUUsT0FBTztZQUNoQixXQUFXLEVBQUUseUNBQXlDO1lBQ3RELElBQUksRUFBRSxTQUFTO1lBQ2YsT0FBTyxFQUFFO2dCQUNMLEtBQUssRUFBRSxjQUFjO2FBQ3hCO1lBQ0QsUUFBUSxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ3hCLE1BQU0sRUFBRSxFQUFFO1lBQ1YsT0FBTyxFQUFFLEtBQUs7WUFDZCxZQUFZLEVBQUU7Z0JBQ1YsWUFBWSxFQUFFLFNBQVM7YUFDMUI7WUFDRCxlQUFlLEVBQUU7Z0JBQ2IsTUFBTSxFQUFFLFFBQVE7YUFDbkI7U0FDSixDQUFDO1FBQ0YsRUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxjQUFjLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTlGLE1BQU0sT0FBTyxHQUFXO1lBQ3BCLGFBQWE7WUFDYixFQUFFO1lBQ0YsaUNBQWlDO1lBQ2pDLEVBQUU7WUFDRiw4RUFBOEU7WUFDOUUsK0VBQStFO1lBQy9FLDhFQUE4RTtZQUM5RSwyRUFBMkU7WUFDM0UsdUVBQXVFO1lBQ3ZFLDBEQUEwRDtZQUMxRCxFQUFFO1lBQ0YsZ0ZBQWdGO1lBQ2hGLGlEQUFpRDtZQUNqRCxFQUFFO1lBQ0YsNEVBQTRFO1lBQzVFLDBFQUEwRTtZQUMxRSw2RUFBNkU7WUFDN0Usd0VBQXdFO1lBQ3hFLCtFQUErRTtZQUMvRSwrRUFBK0U7WUFDL0UsV0FBVztTQUNkLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWIsRUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUU5RCxNQUFNLE1BQU0sR0FBRztZQUNYLGFBQWEsRUFBRSxPQUFPLENBQUMsTUFBTSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRztZQUNsRSxTQUFTLEVBQUUsY0FBYztTQUM1QixDQUFBO1FBRUQsRUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsRUFBRSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsR0FBRyxLQUFLLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2SSxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsdUJBQXVCLENBQUMsRUFBRSxTQUFTLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFBO0tBQ2pJO1NBQU0sSUFBRyxPQUFPLENBQUMsUUFBUSxLQUFLLElBQUksRUFBRTtLQUVwQztBQUNMLENBQUMsQ0FBQSIsImZpbGUiOiJjcmVhdG9yQm90L2Jhc2ljLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnO1xyXG5pbXBvcnQgKiBhcyBjaGFsayBmcm9tICdjaGFsayc7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IChvcHRpb25zKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhgQ3JlYXRlIGRpc2NvcmQgYXBwIHdpdGggbmFtZSAke29wdGlvbnMubmFtZX0gYXQgJHtwcm9jZXNzLmN3ZCgpfWApO1xyXG4gICAgY29uc3QgdGFyZ2V0RGlyID0gcGF0aC5yZXNvbHZlKHByb2Nlc3MuY3dkKCksIG9wdGlvbnMubmFtZSk7XHJcbiAgICBpZihmcy5leGlzdHNTeW5jKHRhcmdldERpcikpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGNoYWxrLnJlZChgRXJyb3IgOiBEaXJlY3RvcnkgJHtvcHRpb25zLm5hbWV9IGFscmVhZHkgZXhpc3QgYXQgJHtwcm9jZXNzLmN3ZCgpfWApKTtcclxuICAgICAgICBwcm9jZXNzLmV4aXQoMSk7XHJcbiAgICB9XHJcbiAgICBmcy5ta2RpclN5bmModGFyZ2V0RGlyKTtcclxuICAgIGlmKG9wdGlvbnMubGFuZ3VhZ2UgPT09ICdqcycpIHtcclxuICAgICAgICBjb25zdCBwYWNrYWdlSlNPTiA9IHtcclxuICAgICAgICAgICAgbmFtZTogb3B0aW9ucy5uYW1lLFxyXG4gICAgICAgICAgICB2ZXJzaW9uOiBcIjAuMC4xXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkEgYm90IGRpc2NvcmQgZ2VuZXJhdGVkIHdpdGggZGpzYm90LWNsaVwiLFxyXG4gICAgICAgICAgICBtYWluOiBgbWFpbi5qc2AsXHJcbiAgICAgICAgICAgIHNjcmlwdHM6IHtcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiBgbm9kZSBtYWluLmpzYFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBrZXl3b3JkczogWydkc2pib3QtY2xpJ10sXHJcbiAgICAgICAgICAgIGF1dGhvcjogJycsXHJcbiAgICAgICAgICAgIGxpY2Vuc2U6ICdNSVQnLFxyXG4gICAgICAgICAgICBkZXBlbmRlbmNpZXM6IHtcclxuICAgICAgICAgICAgICAgICdkaXNjb3JkLmpzJzogXCJeMTIuMi4wXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGV2RGVwZW5kZW5jaWVzOiB7XHJcbiAgICAgICAgICAgICAgICBkb3RlbnY6IFwiXjguMi4wXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgZnMud3JpdGVGaWxlU3luYyhwYXRoLnJlc29sdmUodGFyZ2V0RGlyLCAncGFja2FnZS5qc29uJyksIGAke0pTT04uc3RyaW5naWZ5KHBhY2thZ2VKU09OKX1cXG5gKTtcclxuXHJcbiAgICAgICAgY29uc3QgbGljZW5zZTogc3RyaW5nID0gW1xyXG4gICAgICAgICAgICAnTUlUIExpY2Vuc2UnLFxyXG4gICAgICAgICAgICAnJyxcclxuICAgICAgICAgICAgJ0NvcHlyaWdodCAoYykgW3llYXJdIFtmdWxsbmFtZV0nLFxyXG4gICAgICAgICAgICAnJyxcclxuICAgICAgICAgICAgJ1Blcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHknLFxyXG4gICAgICAgICAgICAnb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCcsXHJcbiAgICAgICAgICAgICdpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzJyxcclxuICAgICAgICAgICAgJ3RvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwnLFxyXG4gICAgICAgICAgICAnY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzJyxcclxuICAgICAgICAgICAgJ2Z1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6JyxcclxuICAgICAgICAgICAgJycsXHJcbiAgICAgICAgICAgICdUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwnLFxyXG4gICAgICAgICAgICAnY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4nLFxyXG4gICAgICAgICAgICAnJyxcclxuICAgICAgICAgICAgJ1RIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1InLFxyXG4gICAgICAgICAgICAnSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksJyxcclxuICAgICAgICAgICAgJ0ZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRScsXHJcbiAgICAgICAgICAgICdBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSJyxcclxuICAgICAgICAgICAgJ0xJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sJyxcclxuICAgICAgICAgICAgJ09VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFJyxcclxuICAgICAgICAgICAgJ1NPRlRXQVJFLidcclxuICAgICAgICBdLmpvaW4oJ1xcbicpO1xyXG5cclxuICAgICAgICBmcy53cml0ZUZpbGVTeW5jKHBhdGgucmVzb2x2ZSh0YXJnZXREaXIsICdMSUNFTlNFJyksIGxpY2Vuc2UpO1xyXG5cclxuICAgICAgICBjb25zdCBkb3RlbnYgPSB7XHJcbiAgICAgICAgICAgIENPTU1BTkRfU1RBUlQ6IG9wdGlvbnMucHJlZml4ICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLnByZWZpeCA6ICchJyxcclxuICAgICAgICAgICAgQk9UX1RPS0VOOiAnPFlPVVJfVE9LRU4+J1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZzLndyaXRlRmlsZVN5bmMocGF0aC5yZXNvbHZlKHRhcmdldERpciwgJy5lbnYnKSwgYCR7T2JqZWN0LmVudHJpZXMoZG90ZW52KS5tYXAoKFtrZXksIHZhbHVlXSkgPT4gYCR7a2V5fT1cIiR7dmFsdWV9XCJgKS5qb2luKCdcXG4nKX1cXG5gKTtcclxuICAgICAgICBmcy5jb3B5RmlsZVN5bmMocGF0aC5yZXNvbHZlKHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsIGAuLi90ZW1wbGF0ZXMvYmFzaWMvanNgKSwgYG1haW4uanNgKSwgcGF0aC5yZXNvbHZlKHRhcmdldERpciwgJ21haW4uanMnKSlcclxuICAgIH0gZWxzZSBpZihvcHRpb25zLmxhbmd1YWdlID09PSAndHMnKSB7XHJcblxyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxidWlsZCJ9
